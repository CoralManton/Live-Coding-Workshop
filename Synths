
/* 
  CtrlEnter to Play a line of code
  OptionEnter to Play a block of code
  Ctrl.(period) to stop
*/

/* Synths */

/* 
 Create an Oscillator. You could choose a Sine wave, a Saw, Square or Trinagle.
*/

Sine()


/* 
 We can store the wave in a variable.
*/

a = Sine()

/* To disconnect it. */

a._

/* 
 Most basic oscillators have two properties - frequency and amplitude.
 Sine(Frequency, amplitude)
*/

d = Sine( 660, .1 )

/*
You can play notes with synths
*/

d = Synth()
d.note( 'c4')
d.note( 'eb4' )

/*
 Synths have a couple of other properties we can manipulate: the attack
 and decay of the envelope.
*/

d.attack = ms( 1 ) // one millisecond attack time
d.decay =  1/2     // a half-note decay time
d.note( 'g#4' )

/*
 We can also tell Synths to play sequences of notes with different
 durations.
*/

d.play( ['a2', 'a5', 'a4'], 1/2 ) // each note lasts a 1/2 note

/* Try running the above line multiple times with different notes. */

/* We can also create rhythms to loop through. */
d.play( ['a2', 'a5', 'a4'], [1/2, 1/8, 1/2] )

/* 
 Adding .random() to the end of our arrays (lists) will randomize
 which notes get played or durations get chosen.
*/

d.decay = 1/8
d.play( ['a2', 'a3', 'a1'].random() , [1/4, 1/8].random() )

//Gibber use scales and keys
// change the mode of the global scale
Gibber.scale.mode = 'Mixolydian'

// change the root of the global scale
Gibber.scale.root = 'a3'

/* built-in modes
  "Ionian", "Dorian",  "Phrygian", 
  "Lydian", "Mixolydian", "Aeolian", 
  "Locrian", "MajorPentatonic", "MinorPentatonic", 
  "Chromatic", "Adams", "Just", "HalfWhole",
  "WholeHalf", "Equal5Tone", "Equal7Tone",
  "Mess3", "Mess4", "Mess5",
  "Mess6", "Mess7", "Pythagorean"
*/
